#!/bin/bash
set -e
set -u

TestName="$(basename "$(pwd)")"
export TestName

#shellcheck source=./environment
. ./environment
. ./test-config

#shellcheck source=../../scripts/functions
. "${rscripts}"/functions

start_test


on_error() {
  local lc="${BASH_COMMAND}"
  echo "Error occurred in testrunner script [${lc}]"
  export estat=1
  exit 1
}
trap 'on_error' ERR


stop_bareos
sleep 1

"${rscripts}"/cleanup
"${rscripts}"/setup


if ! ./invalidate_tapes.sh
then
  echo "Could not invalidate tapes"
  exit 1
fi

if ! ./create_autochanger_configs.sh
then
  echo "Could not create autochanger configs"
  exit 1
fi


echo "Starting bareos"
start_bareos

echo "Set debug on the Tape-Storage daemon"
tracefile="$(echo "setdebug level=200 trace=1 storage=Tape-0" | bin/bconsole | grep "^3000" | awk -F"tracefile=" '{print $2}' )"
: > "${tracefile}" # clear tracefile

echo "Label barcodes"
for i in $(seq ${NUMBER_OF_POOLS}); do
  pool=$(( i -1 )) #counts from 0
  for j in $(seq ${NUMBER_OF_TAPES_PER_POOL}); do
    slot=$(( j + pool * NUMBER_OF_TAPES_PER_POOL )) #counts from 1
    echo "label barcodes slot=${slot} drive=0 pool=Full-${pool} storage=Tape-0 yes" | bin/bconsole | grep "OK label"
  done
done


# setup backup data
BackupDirectory="${tmp}/data"
setup_data "$@"


# create the test backup jobs
rm -f bconsole_start_jobs

spooling="spooldata=yes"
for i in $(seq ${NUMBER_OF_TEST_ROUNDS}); do
  for j in $(seq ${NUMBER_OF_POOLS}); do
    cat << EOF >> bconsole_start_jobs
run job=backup-bareos-fd level=Full storage=Tape-0 pool=Full-$(( j -1 )) ${spooling} yes
status dir
EOF
    if [ $(( NUMBER_OF_SPOOLING_JOBS_PER_ROUND -j )) -le 0 ]; then
      spooling=""
    fi
  done
done

echo "wait" >> bconsole_start_jobs
echo "messages" >> bconsole_start_jobs


# start all the jobs
bin/bconsole < bconsole_start_jobs

#stop_bareos
end_test
exit 0
